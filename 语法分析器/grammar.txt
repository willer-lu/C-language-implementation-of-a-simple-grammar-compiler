funcdef%type&id&(&parastate&)&{&funcblock&}&#
type%int|float|char|void&#
factor%(&exp&)|id|number|ch&#
exp%divi&item&#
divi%factor&faccycle&#
faccycle%*&factor&faccycle|/&factor&faccycle|$&#
item%+&divi&item|-&divi&item|$&#
parastate%state&stateclo|$&#
state%type&id&idol&init|id&idol&init&#
idol%mathol|$&#
mathol%[&number&]&mathol|$&#
init%=&rvalue|$&#
rvalue%exp|{&numberol&}&#
numberol%number&douhaobibao&numberol|$&#
douhaobibao%,&douhaobibao|$&#
stateclo%,&state&stateclo|$&#
funcblock%staclo&funcbloclo&#
staclo%statement&staclo|$&#
statement%parastate&;&#
funcbloclo%opera&funcbloclo|whilecycle&funcbloclo|condistate&funcbloclo|funcend&funcbloclo|coutstate&funcbloclo|cinstate&funcbloclo|$&#
opera%id&callstate&#
callstate%=&rvalue&;|(&paralist&)&;&#
paralist%para&paraclo&#
paraclo%,&para&paraclo|$&#
para%id|number|string&#
whilecycle%while&(&logicexp&)&do&{&funcblock&}&we&#
logicexp%exp&logicopera&exp&#
logicopera%>|<|==|>=|<=&#
condistate%if&(&logicexp&)&{&funcblock&}&nor&ie&#
nor%else&{&funcblock&}|$&#
funcend%return&factor&;&#
coutstate%cout&<&<&id&;&#
cinstate%cin&>&>&id&;&#
do%$&#
we%$&#
ie%$&#
#
